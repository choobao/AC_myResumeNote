// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int      @id @default(autoincrement()) @map("userId")
  email     String   @unique @map("email")
  password  String   @map("password")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  userInfos UserInfos? // 사용자(Users) 테이블과 사용자 정보(UserInfos) 테이블이 1:1 관계를 맺습니다.
  resumeId Resumes[] //사용자테이블과 게시글은 1:N관계를 맺는다.

  @@map("Users")
}

model Resumes {
  resumeId Int @id @default(autoincrement()) @map("resumeId") 
  status Status @default(APPLY) @map("status")
  userId Int @map("userId")
  userInfoId Int @map("userInfoId") 
  title String @map("title")
  content String @map("content") @db.Text
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  user Users @relation(fields:[userId], references: [userId], onDelete:Cascade)
  userInfos UserInfos @relation(fields:[userInfoId], references: [userInfoId], onDelete:Cascade)

  @@map("Resumes")
}

enum Status{
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}

model UserInfos {
  userInfoId Int @id @default(autoincrement()) @map("userInfoId") 
  userId Int @unique @map("userId")
  name String @map("name")
  age Int? @map("age") 
  gender String @map("gender")
  profileImage String? @map("profileImage")

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")
  
  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

  resumeId Resumes[] //userInfos와 resumes 필드는 1:N관계를 가진다

  @@map("UserInfos")
}
